@page "/"
@using System.Net.Http
@using System.Net.Http.Headers
@using Microsoft.AspNetCore.Blazor.Http
@using LandLord.BlazorApp.Data
@inject HttpClient Http
@inject LandLord.BlazorApp.Services.SignalRService signalrService
@inject NavigationManager navManager



<h1>游戏大厅</h1>


@foreach(var room in _rooms){ 
    <div>
        <div><a href="/room/@room.Id">Room Number: @room.Id</a></div>
        @foreach (var player in room.Players) {
            <ul>
                <li> @(player== null ? "空缺" : player.Name)</li>
            </ul>
        }
    </div>
}
<div>
    <button @onclick="CreateRoom">New Room</button>
</div>

@code {

    private const string GameRoomEndPoint = "https://localhost:44376/api/GameRoom";

    private IList<GameRoomMetaData> _rooms = new List<GameRoomMetaData>();

    protected override async Task OnInitializedAsync()
    {
        var req = new HttpRequestMessage()
        {
            Method = HttpMethod.Get,
            RequestUri = new Uri(GameRoomEndPoint),
        };

        //req.Properties[WebAssemblyHttpMessageHandler.FetchArgs] = new
        //{
        //    credentials = FetchCredentialsOption.Include
        //};

        var response = await Http.SendAsync(req);
        var content = await response.Content.ReadAsStringAsync();
        var metas = this.signalrService.Deserialize<List<GameRoomMetaData>>(content);
        this._rooms = metas;
    }


    public async Task CreateRoom(MouseEventArgs e)
    {
        var room= await Http.PutJsonAsync<GameRoomMetaData>(GameRoomEndPoint, new { });
        this._rooms.Add(room);
        await this.signalrService.JoinRoomAsync(room.Id);
        this.navManager.NavigateTo($"/room/{room.Id}");
    }


}
